# Hybrid 7 minimal example configuration file
#
# $Id$
#
# This is a basic ircd.conf that will get your server running with
# little modification.  See the example.conf for more specific 
# information.
# 
# The serverinfo block sets up your server's name.  Fields that may
# be set are the name, description, vhost, network_name, network_desc,
# and hub.

serverinfo {
	name="irc.example.com";
	description="Test IRC Server";
	hub=no;
	network_name="Example Networkk";
	network_desc="New Network";
	hub=no;
	#vhost="80.49.102.140";	
	#vhost6="3ffe:80e8:546::2";
	#max_clients=512;
	/* rsa key: the path to the file containing our rsa key for cryptlink.
       	* 
	* Example command to store a 2048 bit RSA keypair in
	* rsa.key, and the public key in rsa.pub:
	*
	*      openssl genrsa -out rsa.key 2048
	*      openssl rsa -in rsa.key -pubout -out rsa.pub
	*      chown <ircd-user>.<ircd.group> rsa.key rsa.pub
	*      chmod 0600 rsa.key
	*      chmod 0644 rsa.pub
	*/
	#rsa_private_key_file="/etc/ircd/rsa.key";

};

# The administrator block sets up the server administrator information,
# that is shown when a user issues the /ADMIN command.  All three fields
# are required.

administrator {
	description="Example, Inc Test IRC Server";
	name="John Doe";
	email="jdoe@example.com";
};

# Class blocks define the "privileges" that clients and servers get when they
# connect.  Ping timing, sendQ size, and user limits are all controlled by
# classes.  See example.conf for more information

# Note:  to avoid having possible problems later, define class blocks
#        before anything that uses them (auth, connect, operator)

class {
	name="users";
	ping_time=90;
	number_per_ip=0;
	max_number=200;
	sendq=100000;
};

class {
	name="opers";
	ping_time=90;
	number_per_ip=0;
	max_number=10;
	sendq=500000;
};

class {
	name="server";
	ping_time=5 minutes;
	connectfreq=15 minutes;
	max_number=5;
	sendq=1 megabytes;
};

# Auth blocks define who can connect and what class they are put into.

auth {
	user="*@*";
	class="users";
};

# Operator blocks define who is able to use the OPER command and become IRC
# operators.  The necessary fields are the user@host, oper nick name, and
# the password, encrypted with the mkpasswd program provided.

operator {
	name="JohnDoe";
	user="*@*.example.com";
	password="yl9xlY019Bbfc";
	class="opers";
	global_kill=yes;
	remote=yes;
	kline=yes;
	unkline=yes;
	gline=yes;
	die=yes;
	rehash=yes;
	nick_changes=yes;
	admin=yes;
};

# Listen blocks define what ports your server will listen to client and
# server connections on.  ip is an optional field (Essential for virtual
# hosted machines.)

listen {
	port=6667;
};

# Quarantine blocks deny certain nicknames from being used.

#quarantine {
#	nick="dcc-*";
#	reason="DCC bots are not permitted on this server";
#};

#quarantine {
#	nick="LamestBot";
#	reason="You have to be kidding me!";
#};

#quarantine {
#	nick="NickServ";
#	reason="There are no Nick Services on this Network";
#};

# The general block contains most of the configurable options that were once
# in config.h.  The most important ones are below.  For the rest, please see

# NOTE TO DEVELOPERS:  Do we set defaults for the variables in the general
#                      block?  If so, then I can leave out most of the things
#                      in here and make it simpler to configure.  If not, 
#                      please let me know so I can document things clearly
general {
	# Control nick flooding
	anti_nick_flood=yes;
	max_nick_time=20;
	max_nick_changes=5;

	/* ts delta: the time delta allowed between server clocks before
	* a warning is given, or before the link is dropped.  all servers
	* should run ntpdate/rdate to keep clocks in sync
	*/
	#ts_warn_delta=800 seconds;                                                                                       
	#ts_max_delta=60 minutes;                                                                                         

	fname_userlog="/var/log/ircd/user.log";
	fname_operlog="/var/log/ircd/oper.log";
	fname_foperlog="/var/log/ircd/foper.log";

	# Show extra warnings when servers connections cannot succeed
	# because of no "N" line (a misconfigured connect block)
	warn_no_nline=yes;
};

logging {
	/* log level: the amount of detail to log in ircd.log.  The
	* higher, the more information is logged.  May be changed
	* once the server is running via /quote SET LOG.  Either:
	* L_CRIT, L_ERROR, L_WARN, L_NOTICE, L_TRACE, L_INFO or L_DEBUG
	*/
	log_level=L_NOTICE;
};

# There are many more configurable options.  See example.conf for the rest
